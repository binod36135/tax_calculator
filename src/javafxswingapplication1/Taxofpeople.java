package javafxswingapplication1;

import java.awt.event.KeyEvent;

public class Taxofpeople extends javax.swing.JFrame {
    public Taxofpeople() {
        initComponents();
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel4 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        calculateBtn = new javax.swing.JButton();
        resetBtn = new javax.swing.JButton();
        exitBtn = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        taxTF = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        nameTF = new javax.swing.JTextField();
        maritalstatus = new javax.swing.JLabel();
        single = new javax.swing.JRadioButton();
        married = new javax.swing.JRadioButton();
        sex = new javax.swing.JLabel();
        male = new javax.swing.JRadioButton();
        female = new javax.swing.JRadioButton();
        Jlabel5 = new javax.swing.JLabel();
        insurance = new javax.swing.JRadioButton();
        insuranceno = new javax.swing.JRadioButton();
        Jlabel3 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        incomeTF = new javax.swing.JTextField();

        jLabel4.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        jLabel4.setText("By: Binod Bhandari                                                        Contact:9867434858");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel1.setText("Tax Of People");

        jTextField3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTextField3.setText("Marital Status:");
        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });

        calculateBtn.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        calculateBtn.setText("Calculate");
        calculateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calculateBtnActionPerformed(evt);
            }
        });

        resetBtn.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        resetBtn.setText("Reset");
        resetBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetBtnActionPerformed(evt);
            }
        });

        exitBtn.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        exitBtn.setText("Exit");
        exitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitBtnActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED), "By", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 1, 14), new java.awt.Color(0, 0, 153))); // NOI18N

        jLabel6.setFont(new java.awt.Font("Times New Roman", 2, 12)); // NOI18N
        jLabel6.setText("Binod Bhandari                                                                   Contact: 9867434858");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 382, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        taxTF.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        taxTF.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        taxTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                taxTFActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(18, Short.MAX_VALUE)
                .addComponent(taxTF, javax.swing.GroupLayout.PREFERRED_SIZE, 368, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(taxTF, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED), "Details", javax.swing.border.TitledBorder.LEADING, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 1, 14), new java.awt.Color(0, 0, 153))); // NOI18N

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Name : ");

        nameTF.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        nameTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameTFActionPerformed(evt);
            }
        });

        maritalstatus.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        maritalstatus.setText("Marital Status :");

        single.setText("Single");
        single.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                singleActionPerformed(evt);
            }
        });
        single.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                singleKeyPressed(evt);
            }
        });

        married.setText("Double");
        married.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                marriedActionPerformed(evt);
            }
        });

        sex.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        sex.setText("Sex :");

        male.setText("Male");
        male.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                maleActionPerformed(evt);
            }
        });

        female.setText("Female");
        female.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                femaleActionPerformed(evt);
            }
        });

        Jlabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Jlabel5.setText("Insurance :");

        insurance.setText("Yes");
        insurance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insuranceActionPerformed(evt);
            }
        });

        insuranceno.setText("No");
        insuranceno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insurancenoActionPerformed(evt);
            }
        });

        Jlabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Jlabel3.setText("Income :");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setText("Rs.");

        incomeTF.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        incomeTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                incomeTFActionPerformed(evt);
            }
        });
        incomeTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                incomeTFKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(maritalstatus)
                    .addComponent(sex)
                    .addComponent(Jlabel5)
                    .addComponent(Jlabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(nameTF, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                            .addComponent(single)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(married))
                        .addGroup(jPanel4Layout.createSequentialGroup()
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel4Layout.createSequentialGroup()
                                    .addComponent(male)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                    .addComponent(insurance)
                                    .addGap(150, 150, 150)))
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel4Layout.createSequentialGroup()
                                    .addComponent(insuranceno)
                                    .addGap(20, 20, 20))
                                .addComponent(female, javax.swing.GroupLayout.Alignment.TRAILING))))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(18, 18, 18)
                        .addComponent(incomeTF, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(nameTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(maritalstatus)
                    .addComponent(single)
                    .addComponent(married))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sex)
                    .addComponent(male)
                    .addComponent(female))
                .addGap(6, 6, 6)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Jlabel5)
                    .addComponent(insurance)
                    .addComponent(insuranceno))
                .addGap(19, 19, 19)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Jlabel3)
                    .addComponent(jLabel7)
                    .addComponent(incomeTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(449, 449, 449)
                        .addComponent(jLabel3))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(calculateBtn)
                                    .addGap(71, 71, 71)
                                    .addComponent(resetBtn)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(exitBtn))
                                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(148, 148, 148)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(50, 50, 50)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(317, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(1, 1, 1)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(calculateBtn)
                    .addComponent(resetBtn)
                    .addComponent(exitBtn))
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(177, 177, 177)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(291, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField3ActionPerformed

    private void nameTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameTFActionPerformed

    private void maleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_maleActionPerformed
       if(male.isSelected())
           female.setSelected(false);
          
        
        
    }//GEN-LAST:event_maleActionPerformed

    private void calculateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calculateBtnActionPerformed
        double income;
        income=Double.parseDouble(incomeTF.getText());
        
        //Logical part
        if(single.isSelected()){
            if(male.isSelected()){
                if(insuranceno.isSelected()){
                    if(income<=350000){
                        
                        double tax=0.1*income;
                        taxTF.setText(Double.toString(tax));
                    }
                    if(income>350000&&income<=450000){
                        double tax=(0.1*350000)+(0.15*(income-350000));
                        taxTF.setText(Double.toString(tax));
                    }
                    if(income>450000){
                        double tax=(0.1*350000)+(0.15*100000)+(0.25*(income-450000));
                        taxTF.setText(Double.toString(tax));
                    }
                }//insuranceno closed
                if(insurance.isSelected()){
                    if(income<=375000){
                        double taxableamount=income-25000;
                        double tax=0.1*taxableamount;
                        taxTF.setText(Double.toString(tax));
                    }
                    if(income>375000&&income<=475000){
                        double taxableamount=income-25000;
                        double tax=(0.1*350000)+(0.15*(taxableamount-350000));
                        taxTF.setText(Double.toString(tax));
                    }
                    if(income>475000){
                        double taxableamount=income-25000;
                        double tax=(0.1*350000)+(0.15*100000)+(0.25*(taxableamount-450000));
                        taxTF.setText(Double.toString(tax));
                    }
                    
                }//insurance closed
            }//male is closed
            if(female.isSelected()){
                if(insuranceno.isSelected()){
                    if(income<=360000){
                        
                        double tax=0.1*income;
                        taxTF.setText(Double.toString(tax));
                    }
                    if(income>360000&&income<=460000){
                        double tax=(0.1*350000)+(0.15*(income-350000));
                        taxTF.setText(Double.toString(tax));
                    }
                    if(income>460000){
                        double tax=(0.1*350000)+(0.15*100000)+(0.25*(income-450000));
                        taxTF.setText(Double.toString(tax));
                    }
                }//insuranceno is closed
                if(insurance.isSelected()){
                    if(income<=385000){
                        double taxableamount=income-25000;
                        double tax=0.1*taxableamount;
                        taxTF.setText(Double.toString(tax));
                    }
                    if(income>385000&&income<=485000){
                        double taxableamount=income-25000;
                        double tax=(0.1*350000)+(0.15*(taxableamount-350000));
                        taxTF.setText(Double.toString(tax));
                    }
                    if(income>485000){
                        double taxableamount=income-25000;
                        double tax=(0.1*350000)+(0.15*100000)+(0.25*(taxableamount-450000));
                        taxTF.setText(Double.toString(tax));
                    }
                    
                }//insurance is closed
            }//female is closed
        }//single is closed
        if(married.isSelected()){
                if(insuranceno.isSelected()){
                    if(income<=400000){
                        
                        double tax=0.1*income;
                        taxTF.setText(Double.toString(tax));
                    }
                    if(income>400000&&income<=500000){
                        double tax=(0.1*400000)+(0.15*(income-500000));
                        taxTF.setText(Double.toString(tax));
                    }
                    if(income>500000){
                        double tax=(0.1*400000)+(0.15*100000)+(0.25*(income-500000));
                        taxTF.setText(Double.toString(tax));
                    }
                }//insuranceno is closed
                if(insurance.isSelected()){
                    if(income<=425000){
                        double taxableamount=income-25000;
                        double tax=0.1*taxableamount;
                        taxTF.setText(Double.toString(tax));
                    }
                    if(income>425000&&income<=525000){
                        double taxableamount=income-25000;
                        double tax=(0.1*400000)+(0.15*(taxableamount-400000));
                        taxTF.setText(Double.toString(tax));
                    }
                    if(income>525000){
                        double taxableamount=income-25000;
                        double tax=(0.1*400000)+(0.15*100000)+(0.25*(taxableamount-500000));
                        taxTF.setText(Double.toString(tax));
                    }
                }//insurance is closed
            }//married is closed  
    }//GEN-LAST:event_calculateBtnActionPerformed

    private void incomeTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_incomeTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_incomeTFActionPerformed

    private void resetBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetBtnActionPerformed
    nameTF.setText(null);
    incomeTF.setText(null);
    taxTF.setText(null);
    
    single.setSelected(false);
    married.setSelected(false);
    male.setSelected(false);
    female.setSelected(false);
    insurance.setSelected(false);
    insuranceno.setSelected(false);


        
    }//GEN-LAST:event_resetBtnActionPerformed

    private void exitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitBtnActionPerformed
        System.exit(0);
        
        
        
    }//GEN-LAST:event_exitBtnActionPerformed

    private void singleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_singleActionPerformed
        if(single.isSelected())
            married.setSelected(false);
            
        
        
    }//GEN-LAST:event_singleActionPerformed

    private void marriedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_marriedActionPerformed
       if(married.isSelected())
           single.setSelected(false);
         
        
        
    }//GEN-LAST:event_marriedActionPerformed

    private void insuranceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insuranceActionPerformed
       if(insurance.isSelected())
           insuranceno.setSelected(false);
    }//GEN-LAST:event_insuranceActionPerformed

    private void insurancenoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insurancenoActionPerformed
       if(insuranceno.isSelected())
           insurance.setSelected(false);
    }//GEN-LAST:event_insurancenoActionPerformed

    private void femaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_femaleActionPerformed
       if(female.isSelected())
           male.setSelected(false);
           
    }//GEN-LAST:event_femaleActionPerformed

    private void incomeTFKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_incomeTFKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
        double income;
        income=Double.parseDouble(incomeTF.getText());
             
        if(single.isSelected()){
            if(male.isSelected()){
                if(insuranceno.isSelected()){
                    if(income<=350000){
                        double tax=0.1*income;
                        taxTF.setText(Double.toString(tax));
                    }
                    if(income>350000&&income<=450000){
                        double tax=(0.1*350000)+(0.15*(income-350000));
                        taxTF.setText(Double.toString(tax));
                    }
                    if(income>450000){
                        double tax=(0.1*350000)+(0.15*100000)+(0.25*(income-450000));
                        taxTF.setText(Double.toString(tax));
                    }
                }
                if(insurance.isSelected()){
                    if(income<=375000){
                        double taxableamount=income-25000;
                        double tax=0.1*taxableamount;
                        taxTF.setText(Double.toString(tax));
                    }
                    if(income>375000&&income<=475000){
                        double taxableamount=income-25000;
                        double tax=(0.1*350000)+(0.15*(taxableamount-350000));
                        taxTF.setText(Double.toString(tax));
                    }
                    if(income>475000){
                        double taxableamount=income-25000;
                        double tax=(0.1*350000)+(0.15*100000)+(0.25*(taxableamount-450000));
                        taxTF.setText(Double.toString(tax));
                    }
                }
            }
            if(female.isSelected()){
                if(insuranceno.isSelected()){
                    if(income<=360000){
                        
                        double tax=0.1*income;
                        taxTF.setText(Double.toString(tax));
                    }
                    if(income>360000&&income<=460000){
                        double tax=(0.1*350000)+(0.15*(income-350000));
                        taxTF.setText(Double.toString(tax));
                    }
                    if(income>460000){
                        double tax=(0.1*350000)+(0.15*100000)+(0.25*(income-450000));
                        taxTF.setText(Double.toString(tax));
                    }
                }
                if(insurance.isSelected()){
                    if(income<=385000){
                        double taxableamount=income-25000;
                        double tax=0.1*taxableamount;
                        taxTF.setText(Double.toString(tax));
                    }
                    if(income>385000&&income<=485000){
                        double taxableamount=income-25000;
                        double tax=(0.1*350000)+(0.15*(taxableamount-350000));
                        taxTF.setText(Double.toString(tax));
                    }
                    if(income>485000){
                        double taxableamount=income-25000;
                        double tax=(0.1*350000)+(0.15*100000)+(0.25*(taxableamount-450000));
                        taxTF.setText(Double.toString(tax));
                    }
                }
            }
        }
        if(married.isSelected()){
                if(insuranceno.isSelected()){
                    if(income<=400000){
                        
                        double tax=0.1*income;
                        taxTF.setText(Double.toString(tax));
                    }
                    if(income>400000&&income<=500000){
                        double tax=(0.1*400000)+(0.15*(income-500000));
                        taxTF.setText(Double.toString(tax));
                    }
                    if(income>500000){
                        double tax=(0.1*400000)+(0.15*100000)+(0.25*(income-500000));
                        taxTF.setText(Double.toString(tax));
                    }
                }
                if(insurance.isSelected()){
                    if(income<=425000){
                        double taxableamount=income-25000;
                        double tax=0.1*taxableamount;
                        taxTF.setText(Double.toString(tax));
                    }
                    if(income>425000&&income<=525000){
                        double taxableamount=income-25000;
                        double tax=(0.1*400000)+(0.15*(taxableamount-400000));
                        taxTF.setText(Double.toString(tax));
                    }
                    if(income>525000){
                        double taxableamount=income-25000;
                        double tax=(0.1*400000)+(0.15*100000)+(0.25*(taxableamount-500000));
                        taxTF.setText(Double.toString(tax));
                    }
                }
            }   
        }
    }//GEN-LAST:event_incomeTFKeyPressed

    private void singleKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_singleKeyPressed
        
            
        
    }//GEN-LAST:event_singleKeyPressed

    private void taxTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_taxTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_taxTFActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Taxofpeople.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Taxofpeople.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Taxofpeople.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Taxofpeople.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Taxofpeople().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Jlabel3;
    private javax.swing.JLabel Jlabel5;
    private javax.swing.JButton calculateBtn;
    private javax.swing.JButton exitBtn;
    private javax.swing.JRadioButton female;
    private javax.swing.JTextField incomeTF;
    private javax.swing.JRadioButton insurance;
    private javax.swing.JRadioButton insuranceno;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JRadioButton male;
    private javax.swing.JLabel maritalstatus;
    private javax.swing.JRadioButton married;
    private javax.swing.JTextField nameTF;
    private javax.swing.JButton resetBtn;
    private javax.swing.JLabel sex;
    private javax.swing.JRadioButton single;
    private javax.swing.JTextField taxTF;
    // End of variables declaration//GEN-END:variables
}
